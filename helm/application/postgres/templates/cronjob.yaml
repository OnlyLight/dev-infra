apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-pvc
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.postgresql.storage.size }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ .Release.Name }}-sync
  namespace: {{ .Release.Namespace }}
spec:
  schedule: "0 */6 * * *"  # Every 6 hours
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: {{ .Release.Name }}-sync
            image: postgres:14
            command: ["/bin/sh", "-c"]
            args:
              - |
                PGPASSWORD='{{ .Values.postgresql.master.env.POSTGRES_PASSWORD }}' pg_dump -h {{ .Values.postgresql.master.name }}-0.{{ .Values.postgresql.master.service.name }}.default.svc.cluster.local -p 5432 -U {{ .Values.postgresql.master.env.POSTGRES_USER }} {{ .Values.postgresql.master.env.POSTGRES_DB }} > /backup/dump.sql &&
                PGPASSWORD='{{ .Values.postgresql.replica.env.POSTGRES_REPLICATION_PASSWORD }}' psql -h {{ .Values.postgresql.replica.name }}-0.{{ .Values.postgresql.replica.service.name }}.default.svc.cluster.local -p 5432 -U {{ .Values.postgresql.replica.env.POSTGRES_REPLICATION_USER }} -d {{ .Values.postgresql.master.env.POSTGRES_DB }} < /backup/dump.sql
            volumeMounts:
              - name: backup-storage
                mountPath: /backup
          volumes:
            - name: backup-storage
              persistentVolumeClaim:
                claimName: backup-pvc
          restartPolicy: OnFailure
